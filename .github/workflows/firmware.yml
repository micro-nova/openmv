name: 'Firmware Build üî•'

on:
  push:
    tags:
      - 'v*.*.*'
    branches:    
      - 'master'
    paths:
      - 'src/**'
      - '.github/workflows/*.yml'
      - '!**/README.md'

  pull_request:
    branches:    
      - 'master'
    paths:
      - 'src/**'
      - '.github/workflows/*.yml'
      - '!**/README.md'

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target: [OPENMV2, OPENMV3, OPENMV4, OPENMV4P, PORTENTA, OPENMVPT, NICLAV, NANO33, ARDUINO_NANO_RP2040_CONNECT]
      fail-fast: false
    steps:
    - name: '‚è≥ Checkout repository'
      uses: actions/checkout@v2
      with:
        submodules: false

    - name: 'üß± Update submodules'
      run: source tools/ci.sh && ci_update_submodules

    - name: 'üõ† Install toolchain '
      run: source tools/ci.sh && ci_install_arm_gcc

    - name: 'üèó Build firmware'
      run: source tools/ci.sh && ci_build_target ${{ matrix.target }}

    - name: '‚¨Ü Upload artifacts'
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v2
      with:
        name: firmware
        path: firmware
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: '‚è≥ Checkout repository'
      uses: actions/checkout@v2
      with:
        submodules: false

    - name: 'ü§å Download artifacts'
      uses: actions/download-artifact@v2
      with:
        name: firmware
        path: firmware

    - name: 'üì¶ Package firmware'
      run: source tools/ci.sh && ci_package_firmware_release ${{github.ref_name}}

    - name: 'üî• Create production release'
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        files: firmware_*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'üßπ Remove artifacts'
      uses: geekyeggo/delete-artifact@v2
      with:
        name: firmware
        failOnError: false

  development:
    needs: build
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') == false
    steps:
    - name: '‚è≥ Checkout repository'
      uses: actions/checkout@v2
      with:
        submodules: false

    - name: 'ü§å Download artifacts'
      uses: actions/download-artifact@v2
      with:
        name: firmware
        path: firmware

    - name: 'üì¶ Package firmware'
      run: source tools/ci.sh && ci_package_firmware_development

    - name: 'üè∑ Update development tag'
      uses: EndBug/latest-tag@latest
      with:
        tag-name: development
        description: Development Release.

    - name: 'üî• Create development release'
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        name: Development Release
        tag_name: development
        body: '> **‚ö†Ô∏è WARNING: This a development release and it may be unstable‚ö†Ô∏è**'
        files: firmware/firmware_*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'üßπ Remove artifacts'
      uses: geekyeggo/delete-artifact@v2
      with:
        name: firmware
        failOnError: false
